<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2025/06/19/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>前端场景</title>
    <url>/2025/06/02/%E5%89%8D%E7%AB%AF%E5%9C%BA%E6%99%AF/</url>
    <content><![CDATA[<h2 id="一、React首页白屏可能是什么问题引起的？怎么解决"><a href="#一、React首页白屏可能是什么问题引起的？怎么解决" class="headerlink" title="一、React首页白屏可能是什么问题引起的？怎么解决"></a>一、React首页白屏可能是什么问题引起的？怎么解决</h2><p><a href="https://www.oryoy.com/news/react-xing-neng-you-hua-ji-qiao-jie-jue-shou-ye-bai-ping-jia-zai-wen-ti-ti-sheng-yong-hu-ti-yan.html">React性能优化技巧：解决首页白屏加载问题，提升用户体验 - 云原生实践</a></p>
<p>白屏主要发生在首次加载时，主要原因包括</p>
<ol>
<li>静态资源路径错误。</li>
<li>依赖包没有正确安装或版本兼容问题</li>
<li>网络请求失败</li>
<li>react的路由配置错误</li>
<li>构建工具的问题，比如 Webpack 配置错误。</li>
<li><strong>资源加载阻塞</strong>：React应用的JavaScript文件较大，加载和解析时间较长，导致浏览器在渲染页面之前需要等待。</li>
<li><strong>同步渲染</strong>：React默认的渲染方式是同步的，即在所有JavaScript代码执行完毕后才会进行DOM渲染。</li>
<li><strong>服务端渲染（SSR）缺失</strong>：单页应用（SPA）通常依赖客户端渲染，服务端返回的初始HTML内容较少，导致浏览器渲染延迟。</li>
</ol>
<ul>
<li><p>解决办法：</p>
<ol>
<li><p>确保静态资源的路径配置正确，检查 React项目的 config文件或者 Webpack 的配置文件。</p>
</li>
<li><p>确认所有依赖包已经正确安装，版本兼容。如果有多个版本的 React 依赖包如react router&#x2F;redux，可能会导致冲突</p>
</li>
<li><p>确保网络请求的 API正常工作，可以通过 console日志或<code>chrom devtools</code> 验证</p>
</li>
<li><p>检查 <code>ReactRouter </code>的配置，包括路径匹配和重定向设置。</p>
</li>
<li><p>审查Webpack配置，特别是 output和 <code>publicPath</code> 设置</p>
</li>
<li><p>使用服务端渲染（SSR）</p>
<p>使用next.js等SSR框架，在服务器上渲染React组件，生成完整的HTML，然后发送到客户端</p>
</li>
<li><p>预渲染：是一种介于客户端渲染和服务端渲染之间的技术，适用于静态内容的页面。</p>
<ul>
<li><p>使用prerender-spa-plugin等工具。</p>
</li>
<li><p>在构建阶段生成静态HTML文件</p>
</li>
<li><p>在用户访问时直接返回预渲染的HTML。</p>
</li>
</ul>
<p>注意：刷新时有时会闪烁以下首次页面，这时解决方法，我们可以设置两个预渲染页面（a.html-首页；b.html-loading图）这时候，如果加载首页，直接a.html；如果加载其他的页码并没有设置预渲染页面，就用b.html，这时候就需要用nginx配置</p>
</li>
<li><p>懒加载与代码拆分</p>
<p>可以将应用拆分成多个小的代码块，按需加载，减少初始加载时间。</p>
<ul>
<li>使用<code>React.lazy</code>和Suspense实现组件级别的懒加载。</li>
<li>使用webpack的code splitting功能进行代码拆分。</li>
</ul>
</li>
<li><p>优化资源加载</p>
<p>通过压缩代码、优化图片、使用CDN等方式，可以减少资源加载时间。</p>
<ul>
<li>使用<code>UglifyJS</code>、<code>Terser</code>等工具压缩JavaScript代码。</li>
<li>使用<code>ImageOptim</code>等工具压缩图片。</li>
<li>使用CDN加速资源加载</li>
</ul>
</li>
<li><p>添加启动屏，缓解用户对白屏的感知</p>
</li>
</ol>
</li>
</ul>
<h2 id="二、前端如何处理后端接口一次性返回的超大树形结构数据"><a href="#二、前端如何处理后端接口一次性返回的超大树形结构数据" class="headerlink" title="二、前端如何处理后端接口一次性返回的超大树形结构数据"></a>二、前端如何处理后端接口一次性返回的超大树形结构数据</h2><p>对于前端来讲，关键在于减少渲染压力、提高用户的交互体验，一般考虑以下几个方面：</p>
<ol>
<li><p>分页加载：将数据页分成多页，用户滚动或者点击“加载更多“的时候加载新一页的数据</p>
</li>
<li><p>虚拟滚动：只在视口内渲染一定数量的节点，随着用户滚动动态加载更多的节点。</p>
<p>树形组件库：React的react-virtualized</p>
</li>
<li><p>懒加载：按需加载数据，只有在用户展开某个节点时才请求该节点的子节点数据</p>
<p>除了懒加载数据，惰性渲染也是一种优化手段，即只在需要的时候才渲染DOM节点。比如， 当用户展开树节点时才渲染其子节点</p>
</li>
<li><p>批量处理：将大数据集分块处理，避免一次性渲染大量数据，造成浏览器卡顿。</p>
</li>
<li><p><code>Web Workers</code>：当进行复杂的计算或处理时使用<code>Web Workers</code>，可 以将计算从主线程分离出来，避免主线程阻塞，提高性能。</p>
</li>
<li><p>使用缓存：对于大型树形数据，可以考虑使用本地缓存(如<code>localstorage或IndexedDB</code>)来存储已经加载过 的数据，避免每次用户操作时都去请求后端</p>
</li>
<li><p>树形结构优化:优化树形结构数据本身，例如对于深度很深但不常用的节点，考虑在后端进行预处理筛选， 或者返回数据的层次结构时，先返回主要的部分，再按照需求加载剩余的部分</p>
</li>
</ol>
<h2 id="三、使用同一个链接，如何实现-PC-打开是-web-应用、手机打-开是一个-H5-应用"><a href="#三、使用同一个链接，如何实现-PC-打开是-web-应用、手机打-开是一个-H5-应用" class="headerlink" title="三、使用同一个链接，如何实现 PC 打开是 web 应用、手机打 开是一个 H5 应用"></a>三、使用同一个链接，如何实现 PC 打开是 web 应用、手机打 开是一个 H5 应用</h2><p>背景：一个链接访问页面，同时适配PC、Mobile</p>
<ul>
<li><p>先识别端，根据不同的端进行内容渲染</p>
<h3 id="1、-识别端"><a href="#1、-识别端" class="headerlink" title="1、 识别端"></a>1、 识别端</h3><ol>
<li><p><code>Js</code>：识别  <code>userAgent</code> 用户代理</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(navigator.<span class="property">userAgent</span>)</span><br></pre></td></tr></table></figure>
</li>
<li><p>判断：通过正则 –&gt;元字符、匹配</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">isMobile</span>(<span class="params"></span>) &#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="regexp">/Mobi|Android/i</span>.<span class="title function_">test</span>(navigator.<span class="property">userAgent</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断</span></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_">isMobile</span>()) &#123;</span><br><span class="line">  <span class="comment">// 1、跳转到mobile.html</span></span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">&quot;/mobile.html&quot;</span></span><br><span class="line">  <span class="comment">// 2、加载不同的css文件</span></span><br><span class="line">  <span class="comment">// 3、运行时的代码里面通过提工的isMobile来做处理</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">&quot;/desktop.html&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// react</span></span><br><span class="line">&lt;<span class="title class_">DeviceProvider</span> value=&#123;&#123;<span class="attr">type</span>: <span class="title function_">isMobile</span>()&#125;&#125;&gt;&lt;/<span class="title class_">DeviceProvider</span>&gt;</span><br><span class="line"><span class="comment">// 子组件使用</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Header</span>(<span class="params"></span>) &#123;</span><br><span class="line">   <span class="comment">//拿到value</span></span><br><span class="line">   <span class="keyword">const</span> &#123;type&#125; = <span class="title function_">useContext</span>(<span class="title class_">DeviceContext</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这种方式是通过前端进行判断</p>
<p>问题：如果PC端不断的缩小，这个内容页不会发生变化</p>
</li>
</ol>
<h3 id="2、响应式"><a href="#2、响应式" class="headerlink" title="2、响应式"></a>2、响应式</h3><p>媒体查询、flex布局</p>
</li>
<li><p>框架内完成适配-react</p>
<p>封装一个hook</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useMediaQuery &#125; <span class="keyword">from</span> <span class="string">&#x27;react-responsive&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">App</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">   <span class="keyword">const</span> isDeskTOP = <span class="title function_">useMediaQuery</span>(&#123; <span class="attr">minWidth</span>: <span class="number">1024</span>&#125;);</span><br><span class="line">   <span class="keyword">const</span> isMobile = <span class="title function_">useMediaQuery</span>(&#123; <span class="attr">maxWidth</span>: <span class="number">1024</span>&#125;);</span><br><span class="line">   <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">         &#123;isDesktop &amp;&amp; (</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">               <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Desktop Web Application<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">               <span class="tag">&lt;<span class="name">p</span>&gt;</span>This content is displayed on Desktop devices.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">         )&#125; </span></span><br><span class="line"><span class="language-xml">          &#123;isMobile &amp;&amp; (</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">               <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Mobile H5 Application<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">               <span class="tag">&lt;<span class="name">p</span>&gt;</span>This content is displayed on Mobile devices.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">         )&#125;   </span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">      );</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span>;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="四、如何实现网页加载进度条"><a href="#四、如何实现网页加载进度条" class="headerlink" title="四、如何实现网页加载进度条"></a>四、如何实现网页加载进度条</h2><p>问题：</p>
<ol>
<li>怎么拿到进度<ul>
<li>方法兼容性</li>
<li>fetch、ajax</li>
</ul>
</li>
<li>怎么绘制进度<ul>
<li>dom</li>
<li>svg</li>
<li>canvs</li>
</ul>
</li>
</ol>
<h3 id="1、方案1"><a href="#1、方案1" class="headerlink" title="1、方案1"></a>1、方案1</h3><h4 id="页面加载"><a href="#页面加载" class="headerlink" title="页面加载"></a>页面加载</h4><p>监听页面加载的事件， 来控制进度条的；  创建对应的， 监听你的整个控制条的进度</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#progress-bar</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: fixed;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">4px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#4caf50</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">z-index</span>: <span class="number">9999</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: width <span class="number">0.4s</span> ease;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;progress-bar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">simulateLoadingProgress</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> progressBar = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;progress-bar&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> width = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> interval = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span> (width &gt;= <span class="number">100</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="built_in">clearInterval</span>(interval);</span></span><br><span class="line"><span class="language-javascript">                    progressBar.<span class="property">style</span>.<span class="property">width</span> = <span class="string">&#x27;100%&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                        progressBar.<span class="property">style</span>.<span class="property">width</span> = <span class="string">&#x27;0%&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                    &#125;, <span class="number">500</span>);</span></span><br><span class="line"><span class="language-javascript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    width += <span class="number">10</span>;</span></span><br><span class="line"><span class="language-javascript">                    progressBar.<span class="property">style</span>.<span class="property">width</span> = <span class="string">`<span class="subst">$&#123;width&#125;</span>%`</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;, <span class="number">100</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">simulateLoadingProgress</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h4 id="请求实现"><a href="#请求实现" class="headerlink" title="请求实现"></a>请求实现</h4><p>Ajax 拿到进度， svg&#x2F;dom 绘制</p>
<p>请求拿到进度。其实绘制的部分逻辑可以复用，只是它驱动的事件变了，不是load事件驱动它，而是整个请求过程中给你返回值的那个进度，后端处理了百分之多少拿的</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#progress-bar</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: fixed;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">4px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">z-index</span>: <span class="number">9999</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: width <span class="number">0.4s</span> ease;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;progress-bar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">loadResource</span>(<span class="params">url</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span></span><br><span class="line"><span class="language-javascript">                xhr.<span class="title function_">open</span>(<span class="string">&#x27;GET&#x27;</span>, url, <span class="literal">true</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 监听进度 通过onprogress去监听</span></span></span><br><span class="line"><span class="language-javascript">                xhr.<span class="property">onprogress</span> = <span class="keyword">function</span>(<span class="params">event</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (event.<span class="property">lengthComputable</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">const</span> precentComplete = (event.<span class="property">loaded</span> / event.<span class="property">total</span>) * <span class="number">100</span>; </span></span><br><span class="line"><span class="language-javascript">                        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;progress-bar&#x27;</span>).<span class="property">style</span>.<span class="property">width</span> = <span class="string">`<span class="subst">$&#123;precentComplete&#125;</span>%`</span>;</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">                xhr.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (xhr.<span class="property">status</span> === <span class="number">200</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;progress-bar&#x27;</span>).<span class="property">style</span>.<span class="property">width</span> = <span class="string">&#x27;100%&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;progress-bar&#x27;</span>).<span class="property">style</span>.<span class="property">width</span> = <span class="string">&#x27;0%&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                    &#125;, <span class="number">500</span>);</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;;</span></span><br><span class="line"><span class="language-javascript">            xhr.<span class="title function_">send</span>();</span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 模拟加载资源</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> resourceUrl = <span class="string">&#x27;https://example.com/large-file.txt&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">loadResource</span>(<span class="string">&#x27;https://example.com/large-file.txt&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>fetch实现</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- fetch 可不可以实现 --&gt;</span></span><br><span class="line"> <span class="comment">&lt;!-- 可以实现 --&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">loadResource</span>(<span class="params">url</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">fetch</span>(url)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">blob</span>())</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">then</span>(<span class="function"><span class="params">blob</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> reader = <span class="keyword">new</span> <span class="title class_">FileReader</span>();</span></span><br><span class="line"><span class="language-javascript">            reader.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">const</span> progress = (e.<span class="property">loaded</span> / e.<span class="property">total</span>) * <span class="number">100</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;progress-bar&#x27;</span>).<span class="property">style</span>.<span class="property">width</span> = <span class="string">`<span class="subst">$&#123;progress&#125;</span>%`</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            reader.<span class="title function_">readAsDataURL</span>(blob);</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;加载失败:&#x27;</span>, error);</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> resourceUrl = <span class="string">&#x27;https://example.com/large-file.txt&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">loadResource</span>(<span class="string">&#x27;https://example.com/large-file.txt&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>react框架实现</li>
</ul>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useEffect &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">BrowserRouter</span> <span class="keyword">as</span> <span class="title class_">Router</span>, <span class="title class_">Switch</span>, <span class="title class_">Route</span>, useHistory &#125; <span class="keyword">from</span> <span class="string">&#x27;react-router-dom&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NProgress</span> <span class="keyword">from</span> <span class="string">&#x27;nprogress&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;nprogress/nprogress.css&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Home</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">About</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>About<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">App</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> history = <span class="title function_">useHistory</span>();</span><br><span class="line"></span><br><span class="line">    <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="title class_">NProgress</span>.<span class="title function_">configure</span>(&#123; <span class="attr">showSpinner</span>: <span class="literal">false</span> &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> <span class="title function_">uhandleStart</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">            <span class="title class_">NProgress</span>.<span class="title function_">start</span>();</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> <span class="title function_">handleStop</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">            <span class="title class_">NProgress</span>.<span class="title function_">done</span>();</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        history.<span class="title function_">listen</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="title function_">handleStart</span>();</span><br><span class="line">            <span class="title function_">handleStop</span>();</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            history.<span class="title function_">listen</span>().<span class="title function_">cancel</span>();</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;, [history]);</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">Router</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Switch</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">Route</span> <span class="attr">exact</span> <span class="attr">path</span>=<span class="string">&quot;/&quot;</span> <span class="attr">component</span>=<span class="string">&#123;Home&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;/about&quot;</span> <span class="attr">component</span>=<span class="string">&#123;About&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">Switch</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Router</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span>;</span><br></pre></td></tr></table></figure>

<h2 id="五、如何禁止别人调试前端页面代码"><a href="#五、如何禁止别人调试前端页面代码" class="headerlink" title="五、如何禁止别人调试前端页面代码"></a>五、如何禁止别人调试前端页面代码</h2><ol>
<li>禁用右键：通过JS禁用右键点击事件</li>
<li>禁用F12和开发者工具</li>
<li>代码混淆和压缩</li>
<li>检测工具开关开发者工具</li>
<li>真正关键的逻辑和数据，放在后端实现，并确保通过API的安全调用等措施确保安全性</li>
</ol>
<h2 id="六、、如何使用-JavaScript-实现一个轻量级本地存储方案，用于保存和读取用户偏好设置"><a href="#六、、如何使用-JavaScript-实现一个轻量级本地存储方案，用于保存和读取用户偏好设置" class="headerlink" title="六、、如何使用 JavaScript 实现一个轻量级本地存储方案，用于保存和读取用户偏好设置"></a>六、、如何使用 JavaScript 实现一个轻量级本地存储方案，<strong>用于保存和读取用户偏好设置</strong></h2><p>使用localStorage非常简单，可以通过以下步骤来实现：</p>
<ol>
<li>使用<code>localStorage.setItem(key, value)</code>方法将数据存储到localStorage中，key是要存储的数据的键，value是对应的值。</li>
<li>使用<code>localStorage.getItem(key)</code>方法可以获取之前存储的数据，key是要获取的数据的键。</li>
<li>使用<code>localStorage.removeItem(key)</code>方法可以删除特定键的数据。</li>
<li>使用<code>localStorage.clear()</code>方法可以清空localStorage中的所有数据。</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="七、使用react设计一个过滤器"><a href="#七、使用react设计一个过滤器" class="headerlink" title="七、使用react设计一个过滤器"></a>七、使用react设计一个过滤器</h2><p><a href="https://www.oryoy.com/news/react-shi-zhan-gao-xiao-shi-yong-guo-lv-qi-shi-xian-shu-ju-dong-tai-shai-xuan-yu-zhan-shi.html">React实战：高效使用过滤器实现数据动态筛选与展示 - 云原生实践</a></p>
]]></content>
  </entry>
</search>
